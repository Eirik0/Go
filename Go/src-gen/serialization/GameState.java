// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameState.proto

package serialization;

public final class GameState {
  private GameState() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Color
      implements com.google.protobuf.ProtocolMessageEnum {
    EMPTY(0, 0),
    BLACK(1, 1),
    WHITE(2, 2),
    ;
    
    public static final int EMPTY_VALUE = 0;
    public static final int BLACK_VALUE = 1;
    public static final int WHITE_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static Color valueOf(int value) {
      switch (value) {
        case 0: return EMPTY;
        case 1: return BLACK;
        case 2: return WHITE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Color>() {
            public Color findValueByNumber(int number) {
              return Color.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return serialization.GameState.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Color[] VALUES = {
      EMPTY, BLACK, WHITE, 
    };
    
    public static Color valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Color(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:serialization.Color)
  }
  
  public interface IntersectionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 X = 1;
    boolean hasX();
    int getX();
    
    // required int32 Y = 2;
    boolean hasY();
    int getY();
  }
  public static final class Intersection extends
      com.google.protobuf.GeneratedMessage
      implements IntersectionOrBuilder {
    // Use Intersection.newBuilder() to construct.
    private Intersection(Builder builder) {
      super(builder);
    }
    private Intersection(boolean noInit) {}
    
    private static final Intersection defaultInstance;
    public static Intersection getDefaultInstance() {
      return defaultInstance;
    }
    
    public Intersection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return serialization.GameState.internal_static_serialization_Intersection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return serialization.GameState.internal_static_serialization_Intersection_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 X = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 Y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static serialization.GameState.Intersection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Intersection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Intersection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Intersection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Intersection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(serialization.GameState.Intersection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements serialization.GameState.IntersectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return serialization.GameState.internal_static_serialization_Intersection_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return serialization.GameState.internal_static_serialization_Intersection_fieldAccessorTable;
      }
      
      // Construct using serialization.GameState.Intersection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return serialization.GameState.Intersection.getDescriptor();
      }
      
      public serialization.GameState.Intersection getDefaultInstanceForType() {
        return serialization.GameState.Intersection.getDefaultInstance();
      }
      
      public serialization.GameState.Intersection build() {
        serialization.GameState.Intersection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private serialization.GameState.Intersection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        serialization.GameState.Intersection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public serialization.GameState.Intersection buildPartial() {
        serialization.GameState.Intersection result = new serialization.GameState.Intersection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof serialization.GameState.Intersection) {
          return mergeFrom((serialization.GameState.Intersection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(serialization.GameState.Intersection other) {
        if (other == serialization.GameState.Intersection.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 X = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 Y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:serialization.Intersection)
    }
    
    static {
      defaultInstance = new Intersection(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:serialization.Intersection)
  }
  
  public interface PlacementOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .serialization.Intersection place = 1;
    boolean hasPlace();
    serialization.GameState.Intersection getPlace();
    serialization.GameState.IntersectionOrBuilder getPlaceOrBuilder();
    
    // required .serialization.Color player = 2;
    boolean hasPlayer();
    serialization.GameState.Color getPlayer();
  }
  public static final class Placement extends
      com.google.protobuf.GeneratedMessage
      implements PlacementOrBuilder {
    // Use Placement.newBuilder() to construct.
    private Placement(Builder builder) {
      super(builder);
    }
    private Placement(boolean noInit) {}
    
    private static final Placement defaultInstance;
    public static Placement getDefaultInstance() {
      return defaultInstance;
    }
    
    public Placement getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return serialization.GameState.internal_static_serialization_Placement_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return serialization.GameState.internal_static_serialization_Placement_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .serialization.Intersection place = 1;
    public static final int PLACE_FIELD_NUMBER = 1;
    private serialization.GameState.Intersection place_;
    public boolean hasPlace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public serialization.GameState.Intersection getPlace() {
      return place_;
    }
    public serialization.GameState.IntersectionOrBuilder getPlaceOrBuilder() {
      return place_;
    }
    
    // required .serialization.Color player = 2;
    public static final int PLAYER_FIELD_NUMBER = 2;
    private serialization.GameState.Color player_;
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public serialization.GameState.Color getPlayer() {
      return player_;
    }
    
    private void initFields() {
      place_ = serialization.GameState.Intersection.getDefaultInstance();
      player_ = serialization.GameState.Color.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPlace()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlace().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, place_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, player_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, place_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, player_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static serialization.GameState.Placement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Placement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Placement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Placement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Placement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(serialization.GameState.Placement prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements serialization.GameState.PlacementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return serialization.GameState.internal_static_serialization_Placement_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return serialization.GameState.internal_static_serialization_Placement_fieldAccessorTable;
      }
      
      // Construct using serialization.GameState.Placement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlaceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (placeBuilder_ == null) {
          place_ = serialization.GameState.Intersection.getDefaultInstance();
        } else {
          placeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = serialization.GameState.Color.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return serialization.GameState.Placement.getDescriptor();
      }
      
      public serialization.GameState.Placement getDefaultInstanceForType() {
        return serialization.GameState.Placement.getDefaultInstance();
      }
      
      public serialization.GameState.Placement build() {
        serialization.GameState.Placement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private serialization.GameState.Placement buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        serialization.GameState.Placement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public serialization.GameState.Placement buildPartial() {
        serialization.GameState.Placement result = new serialization.GameState.Placement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (placeBuilder_ == null) {
          result.place_ = place_;
        } else {
          result.place_ = placeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.player_ = player_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof serialization.GameState.Placement) {
          return mergeFrom((serialization.GameState.Placement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(serialization.GameState.Placement other) {
        if (other == serialization.GameState.Placement.getDefaultInstance()) return this;
        if (other.hasPlace()) {
          mergePlace(other.getPlace());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPlace()) {
          
          return false;
        }
        if (!hasPlayer()) {
          
          return false;
        }
        if (!getPlace().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              serialization.GameState.Intersection.Builder subBuilder = serialization.GameState.Intersection.newBuilder();
              if (hasPlace()) {
                subBuilder.mergeFrom(getPlace());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPlace(subBuilder.buildPartial());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              serialization.GameState.Color value = serialization.GameState.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                player_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .serialization.Intersection place = 1;
      private serialization.GameState.Intersection place_ = serialization.GameState.Intersection.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          serialization.GameState.Intersection, serialization.GameState.Intersection.Builder, serialization.GameState.IntersectionOrBuilder> placeBuilder_;
      public boolean hasPlace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public serialization.GameState.Intersection getPlace() {
        if (placeBuilder_ == null) {
          return place_;
        } else {
          return placeBuilder_.getMessage();
        }
      }
      public Builder setPlace(serialization.GameState.Intersection value) {
        if (placeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          place_ = value;
          onChanged();
        } else {
          placeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setPlace(
          serialization.GameState.Intersection.Builder builderForValue) {
        if (placeBuilder_ == null) {
          place_ = builderForValue.build();
          onChanged();
        } else {
          placeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergePlace(serialization.GameState.Intersection value) {
        if (placeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              place_ != serialization.GameState.Intersection.getDefaultInstance()) {
            place_ =
              serialization.GameState.Intersection.newBuilder(place_).mergeFrom(value).buildPartial();
          } else {
            place_ = value;
          }
          onChanged();
        } else {
          placeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearPlace() {
        if (placeBuilder_ == null) {
          place_ = serialization.GameState.Intersection.getDefaultInstance();
          onChanged();
        } else {
          placeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public serialization.GameState.Intersection.Builder getPlaceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlaceFieldBuilder().getBuilder();
      }
      public serialization.GameState.IntersectionOrBuilder getPlaceOrBuilder() {
        if (placeBuilder_ != null) {
          return placeBuilder_.getMessageOrBuilder();
        } else {
          return place_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          serialization.GameState.Intersection, serialization.GameState.Intersection.Builder, serialization.GameState.IntersectionOrBuilder> 
          getPlaceFieldBuilder() {
        if (placeBuilder_ == null) {
          placeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              serialization.GameState.Intersection, serialization.GameState.Intersection.Builder, serialization.GameState.IntersectionOrBuilder>(
                  place_,
                  getParentForChildren(),
                  isClean());
          place_ = null;
        }
        return placeBuilder_;
      }
      
      // required .serialization.Color player = 2;
      private serialization.GameState.Color player_ = serialization.GameState.Color.EMPTY;
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public serialization.GameState.Color getPlayer() {
        return player_;
      }
      public Builder setPlayer(serialization.GameState.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        player_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        player_ = serialization.GameState.Color.EMPTY;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:serialization.Placement)
    }
    
    static {
      defaultInstance = new Placement(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:serialization.Placement)
  }
  
  public interface MomentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .serialization.Color toMove = 1;
    boolean hasToMove();
    serialization.GameState.Color getToMove();
    
    // repeated .serialization.Placement boardState = 2;
    java.util.List<serialization.GameState.Placement> 
        getBoardStateList();
    serialization.GameState.Placement getBoardState(int index);
    int getBoardStateCount();
    java.util.List<? extends serialization.GameState.PlacementOrBuilder> 
        getBoardStateOrBuilderList();
    serialization.GameState.PlacementOrBuilder getBoardStateOrBuilder(
        int index);
  }
  public static final class Moment extends
      com.google.protobuf.GeneratedMessage
      implements MomentOrBuilder {
    // Use Moment.newBuilder() to construct.
    private Moment(Builder builder) {
      super(builder);
    }
    private Moment(boolean noInit) {}
    
    private static final Moment defaultInstance;
    public static Moment getDefaultInstance() {
      return defaultInstance;
    }
    
    public Moment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return serialization.GameState.internal_static_serialization_Moment_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return serialization.GameState.internal_static_serialization_Moment_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .serialization.Color toMove = 1;
    public static final int TOMOVE_FIELD_NUMBER = 1;
    private serialization.GameState.Color toMove_;
    public boolean hasToMove() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public serialization.GameState.Color getToMove() {
      return toMove_;
    }
    
    // repeated .serialization.Placement boardState = 2;
    public static final int BOARDSTATE_FIELD_NUMBER = 2;
    private java.util.List<serialization.GameState.Placement> boardState_;
    public java.util.List<serialization.GameState.Placement> getBoardStateList() {
      return boardState_;
    }
    public java.util.List<? extends serialization.GameState.PlacementOrBuilder> 
        getBoardStateOrBuilderList() {
      return boardState_;
    }
    public int getBoardStateCount() {
      return boardState_.size();
    }
    public serialization.GameState.Placement getBoardState(int index) {
      return boardState_.get(index);
    }
    public serialization.GameState.PlacementOrBuilder getBoardStateOrBuilder(
        int index) {
      return boardState_.get(index);
    }
    
    private void initFields() {
      toMove_ = serialization.GameState.Color.EMPTY;
      boardState_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasToMove()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBoardStateCount(); i++) {
        if (!getBoardState(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, toMove_.getNumber());
      }
      for (int i = 0; i < boardState_.size(); i++) {
        output.writeMessage(2, boardState_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, toMove_.getNumber());
      }
      for (int i = 0; i < boardState_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, boardState_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static serialization.GameState.Moment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static serialization.GameState.Moment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Moment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static serialization.GameState.Moment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static serialization.GameState.Moment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(serialization.GameState.Moment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements serialization.GameState.MomentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return serialization.GameState.internal_static_serialization_Moment_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return serialization.GameState.internal_static_serialization_Moment_fieldAccessorTable;
      }
      
      // Construct using serialization.GameState.Moment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoardStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        toMove_ = serialization.GameState.Color.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (boardStateBuilder_ == null) {
          boardState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          boardStateBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return serialization.GameState.Moment.getDescriptor();
      }
      
      public serialization.GameState.Moment getDefaultInstanceForType() {
        return serialization.GameState.Moment.getDefaultInstance();
      }
      
      public serialization.GameState.Moment build() {
        serialization.GameState.Moment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private serialization.GameState.Moment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        serialization.GameState.Moment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public serialization.GameState.Moment buildPartial() {
        serialization.GameState.Moment result = new serialization.GameState.Moment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.toMove_ = toMove_;
        if (boardStateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            boardState_ = java.util.Collections.unmodifiableList(boardState_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.boardState_ = boardState_;
        } else {
          result.boardState_ = boardStateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof serialization.GameState.Moment) {
          return mergeFrom((serialization.GameState.Moment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(serialization.GameState.Moment other) {
        if (other == serialization.GameState.Moment.getDefaultInstance()) return this;
        if (other.hasToMove()) {
          setToMove(other.getToMove());
        }
        if (boardStateBuilder_ == null) {
          if (!other.boardState_.isEmpty()) {
            if (boardState_.isEmpty()) {
              boardState_ = other.boardState_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBoardStateIsMutable();
              boardState_.addAll(other.boardState_);
            }
            onChanged();
          }
        } else {
          if (!other.boardState_.isEmpty()) {
            if (boardStateBuilder_.isEmpty()) {
              boardStateBuilder_.dispose();
              boardStateBuilder_ = null;
              boardState_ = other.boardState_;
              bitField0_ = (bitField0_ & ~0x00000002);
              boardStateBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoardStateFieldBuilder() : null;
            } else {
              boardStateBuilder_.addAllMessages(other.boardState_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasToMove()) {
          
          return false;
        }
        for (int i = 0; i < getBoardStateCount(); i++) {
          if (!getBoardState(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              serialization.GameState.Color value = serialization.GameState.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                toMove_ = value;
              }
              break;
            }
            case 18: {
              serialization.GameState.Placement.Builder subBuilder = serialization.GameState.Placement.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBoardState(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .serialization.Color toMove = 1;
      private serialization.GameState.Color toMove_ = serialization.GameState.Color.EMPTY;
      public boolean hasToMove() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public serialization.GameState.Color getToMove() {
        return toMove_;
      }
      public Builder setToMove(serialization.GameState.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        toMove_ = value;
        onChanged();
        return this;
      }
      public Builder clearToMove() {
        bitField0_ = (bitField0_ & ~0x00000001);
        toMove_ = serialization.GameState.Color.EMPTY;
        onChanged();
        return this;
      }
      
      // repeated .serialization.Placement boardState = 2;
      private java.util.List<serialization.GameState.Placement> boardState_ =
        java.util.Collections.emptyList();
      private void ensureBoardStateIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          boardState_ = new java.util.ArrayList<serialization.GameState.Placement>(boardState_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          serialization.GameState.Placement, serialization.GameState.Placement.Builder, serialization.GameState.PlacementOrBuilder> boardStateBuilder_;
      
      public java.util.List<serialization.GameState.Placement> getBoardStateList() {
        if (boardStateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boardState_);
        } else {
          return boardStateBuilder_.getMessageList();
        }
      }
      public int getBoardStateCount() {
        if (boardStateBuilder_ == null) {
          return boardState_.size();
        } else {
          return boardStateBuilder_.getCount();
        }
      }
      public serialization.GameState.Placement getBoardState(int index) {
        if (boardStateBuilder_ == null) {
          return boardState_.get(index);
        } else {
          return boardStateBuilder_.getMessage(index);
        }
      }
      public Builder setBoardState(
          int index, serialization.GameState.Placement value) {
        if (boardStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardStateIsMutable();
          boardState_.set(index, value);
          onChanged();
        } else {
          boardStateBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBoardState(
          int index, serialization.GameState.Placement.Builder builderForValue) {
        if (boardStateBuilder_ == null) {
          ensureBoardStateIsMutable();
          boardState_.set(index, builderForValue.build());
          onChanged();
        } else {
          boardStateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBoardState(serialization.GameState.Placement value) {
        if (boardStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardStateIsMutable();
          boardState_.add(value);
          onChanged();
        } else {
          boardStateBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBoardState(
          int index, serialization.GameState.Placement value) {
        if (boardStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardStateIsMutable();
          boardState_.add(index, value);
          onChanged();
        } else {
          boardStateBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBoardState(
          serialization.GameState.Placement.Builder builderForValue) {
        if (boardStateBuilder_ == null) {
          ensureBoardStateIsMutable();
          boardState_.add(builderForValue.build());
          onChanged();
        } else {
          boardStateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBoardState(
          int index, serialization.GameState.Placement.Builder builderForValue) {
        if (boardStateBuilder_ == null) {
          ensureBoardStateIsMutable();
          boardState_.add(index, builderForValue.build());
          onChanged();
        } else {
          boardStateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBoardState(
          java.lang.Iterable<? extends serialization.GameState.Placement> values) {
        if (boardStateBuilder_ == null) {
          ensureBoardStateIsMutable();
          super.addAll(values, boardState_);
          onChanged();
        } else {
          boardStateBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBoardState() {
        if (boardStateBuilder_ == null) {
          boardState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          boardStateBuilder_.clear();
        }
        return this;
      }
      public Builder removeBoardState(int index) {
        if (boardStateBuilder_ == null) {
          ensureBoardStateIsMutable();
          boardState_.remove(index);
          onChanged();
        } else {
          boardStateBuilder_.remove(index);
        }
        return this;
      }
      public serialization.GameState.Placement.Builder getBoardStateBuilder(
          int index) {
        return getBoardStateFieldBuilder().getBuilder(index);
      }
      public serialization.GameState.PlacementOrBuilder getBoardStateOrBuilder(
          int index) {
        if (boardStateBuilder_ == null) {
          return boardState_.get(index);  } else {
          return boardStateBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends serialization.GameState.PlacementOrBuilder> 
           getBoardStateOrBuilderList() {
        if (boardStateBuilder_ != null) {
          return boardStateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boardState_);
        }
      }
      public serialization.GameState.Placement.Builder addBoardStateBuilder() {
        return getBoardStateFieldBuilder().addBuilder(
            serialization.GameState.Placement.getDefaultInstance());
      }
      public serialization.GameState.Placement.Builder addBoardStateBuilder(
          int index) {
        return getBoardStateFieldBuilder().addBuilder(
            index, serialization.GameState.Placement.getDefaultInstance());
      }
      public java.util.List<serialization.GameState.Placement.Builder> 
           getBoardStateBuilderList() {
        return getBoardStateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          serialization.GameState.Placement, serialization.GameState.Placement.Builder, serialization.GameState.PlacementOrBuilder> 
          getBoardStateFieldBuilder() {
        if (boardStateBuilder_ == null) {
          boardStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              serialization.GameState.Placement, serialization.GameState.Placement.Builder, serialization.GameState.PlacementOrBuilder>(
                  boardState_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          boardState_ = null;
        }
        return boardStateBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:serialization.Moment)
    }
    
    static {
      defaultInstance = new Moment(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:serialization.Moment)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_serialization_Intersection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serialization_Intersection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_serialization_Placement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serialization_Placement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_serialization_Moment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serialization_Moment_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017GameState.proto\022\rserialization\"$\n\014Inte" +
      "rsection\022\t\n\001X\030\001 \002(\005\022\t\n\001Y\030\002 \002(\005\"]\n\tPlacem" +
      "ent\022*\n\005place\030\001 \002(\0132\033.serialization.Inter" +
      "section\022$\n\006player\030\002 \002(\0162\024.serialization." +
      "Color\"\\\n\006Moment\022$\n\006toMove\030\001 \002(\0162\024.serial" +
      "ization.Color\022,\n\nboardState\030\002 \003(\0132\030.seri" +
      "alization.Placement*(\n\005Color\022\t\n\005EMPTY\020\000\022" +
      "\t\n\005BLACK\020\001\022\t\n\005WHITE\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_serialization_Intersection_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_serialization_Intersection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_serialization_Intersection_descriptor,
              new java.lang.String[] { "X", "Y", },
              serialization.GameState.Intersection.class,
              serialization.GameState.Intersection.Builder.class);
          internal_static_serialization_Placement_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_serialization_Placement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_serialization_Placement_descriptor,
              new java.lang.String[] { "Place", "Player", },
              serialization.GameState.Placement.class,
              serialization.GameState.Placement.Builder.class);
          internal_static_serialization_Moment_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_serialization_Moment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_serialization_Moment_descriptor,
              new java.lang.String[] { "ToMove", "BoardState", },
              serialization.GameState.Moment.class,
              serialization.GameState.Moment.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
